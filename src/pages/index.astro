---
import { getCollection } from 'astro:content';
import { BLOG_CATEGORIES, formatCategoryForUrl, getCategoryDisplayName } from '../constants/categories.ts';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

// Get all posts
const allPosts = await getCollection('posts', ({ data }) => {
    // Filter out draft posts if you have a draft field
    // return data.draft !== true;
    return true; // Assuming all posts in the collection are to be included
});

// Sort posts by publishDate in descending order
const sortedPosts = allPosts.sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime());

// Main featured post for the "Featured Posts" section
const featuredPost = sortedPosts.length > 0 ? sortedPosts[0] : null;

// Side posts for the "Featured Posts" section (next 2 posts)
const sideFeaturedPosts = sortedPosts.length > 1 ? sortedPosts.slice(1, 3) : [];

// Get the latest 3 posts for the "Latest Posts" section
const latestPosts = sortedPosts.slice(0, 3);
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Skill-Wanderer</title>    
    <style>
        .btn-primary {
            @apply font-semibold py-2 px-6 rounded-lg transition-colors bg-skill-wanderer-primary-orange text-skill-wanderer-text-dark;
        }
        .btn-primary:hover {
            @apply bg-skill-wanderer-light-orange;
        }
        .topic-btn {
            @apply font-medium py-2 px-5 rounded-lg transition-colors bg-skill-wanderer-secondary-dark text-skill-wanderer-text-dark-secondary;
        }
        .topic-btn:hover {
            @apply bg-skill-wanderer-card-dark text-skill-wanderer-text-dark;
        }
        .card-dark {
            @apply bg-skill-wanderer-card-dark border border-dark;
        }
        .card-light {
            @apply bg-skill-wanderer-white border border-light shadow-light;
        }
    </style>
</head>
<body class="min-h-screen bg-skill-wanderer-primary-dark text-skill-wanderer-text-dark">
    <!-- Header -->
    <Header />

    <!-- Hero Section -->
    <main class="container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-20 text-center">
        <h1 class="text-5xl md:text-6xl font-bold mb-6 text-skill-wanderer-text-dark">
            The Skill-Wanderer Journey
        </h1>
        <p class="text-xl md:text-2xl mb-8 max-w-3xl mx-auto text-skill-wanderer-text-dark-secondary">
            Insights from My Tech Journey
        </p>
        <p class="text-lg max-w-2xl mx-auto text-skill-wanderer-text-dark-muted">
            Join me on my learning journey as I share insights from exploring various tech
            domains, building projects, and navigating the ever-evolving landscape of software
            development.
        </p>
    </main>    <!-- Explore Topics Section -->
    <section class="py-12 md:py-16 bg-skill-wanderer-light-gray">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <h2 class="text-3xl font-semibold mb-8 text-skill-wanderer-text-light">Explore Topics</h2>            <div class="flex flex-wrap justify-center gap-4">
                <a href="/blog" class="btn-primary">All Posts</a>
                {BLOG_CATEGORIES.map(category => (
                    <a href={`/blog?category=${formatCategoryForUrl(category)}`} class="px-5 py-2 rounded-lg font-medium transition-colors bg-skill-wanderer-white text-skill-wanderer-text-light-secondary border border-light hover:bg-skill-wanderer-light-gray hover:text-skill-wanderer-text-light">{getCategoryDisplayName(category)}</a>
                ))}
            </div>
        </div>
    </section>    <!-- Featured Posts Section -->
    <section class="py-12 md:py-16 bg-skill-wanderer-secondary-dark">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <h2 class="text-3xl font-semibold mb-8 text-skill-wanderer-text-dark">Featured Posts</h2>
            {sortedPosts.length > 0 ? (
                <div class="flex flex-col lg:flex-row gap-8">
                    <!-- Main Featured Post (lg:w-2/3) -->
                    {featuredPost && (
                        <div class="lg:w-2/3">
                            <a href={`/blog/${featuredPost.slug}/`} class="block card-dark rounded-lg overflow-hidden group hover:shadow-xl transition-shadow duration-300 h-full flex flex-col">
                                {featuredPost.data.image && (
                                    <img src={featuredPost.data.image} alt={featuredPost.data.title} class="w-full h-64 md:h-80 object-cover group-hover:scale-105 transition-transform duration-300" />
                                )}
                                <div class="p-6 md:p-8 flex-grow flex flex-col justify-center">
                                    <div class="mb-3">
                                        <span class="inline-block bg-skill-wanderer-primary-orange text-white text-xs font-bold px-3 py-1 rounded uppercase tracking-wider">Featured</span>
                                    </div>
                                    <h3 class="text-3xl lg:text-4xl font-bold mb-4 text-skill-wanderer-text-dark group-hover:text-skill-wanderer-primary-orange transition-colors duration-300">{featuredPost.data.title}</h3>
                                    {featuredPost.data.description && <p class="text-base md:text-lg text-skill-wanderer-text-dark-secondary mb-6 flex-grow">{featuredPost.data.description}</p>}                                    <div class="text-sm text-skill-wanderer-text-dark-muted">
                                        {featuredPost.data.category && <span>{getCategoryDisplayName(featuredPost.data.category).toUpperCase()}</span>}
                                        {featuredPost.data.readTime && featuredPost.data.category && <span class="mx-2">•</span>}
                                        {featuredPost.data.readTime && <span>{featuredPost.data.readTime} min read</span>}
                                        {(featuredPost.data.category || featuredPost.data.readTime) && <span class="mx-2">•</span>}
                                        <span>{new Date(featuredPost.data.publishDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
                                    </div>
                                </div>
                            </a>
                        </div>
                    )}

                    <!-- Side Featured Posts (lg:w-1/3) -->
                    {sideFeaturedPosts.length > 0 && (
                        <div class="lg:w-1/3 flex flex-col gap-6">
                            {sideFeaturedPosts.map(post => (
                                <a href={`/blog/${post.slug}/`} class="block card-dark rounded-lg overflow-hidden group hover:shadow-xl transition-shadow duration-300">
                                    {post.data.image && (
                                        <img src={post.data.image} alt={post.data.title} class="w-full h-40 object-cover group-hover:scale-105 transition-transform duration-300" />
                                    )}
                                    <div class="p-6">
                                        <h4 class="text-xl font-semibold mb-2 text-skill-wanderer-text-dark group-hover:text-skill-wanderer-primary-orange transition-colors duration-300">{post.data.title}</h4>
                                        {post.data.description && <p class="text-sm text-skill-wanderer-text-dark-secondary line-clamp-2">{post.data.description}</p>}
                                    </div>
                                </a>
                            ))}
                        </div>
                    )}
                </div>
            ) : (
                <p class="text-skill-wanderer-text-dark-secondary mt-8 text-center">No posts available at the moment.</p>
            )}
        </div>    </section>    <!-- Latest Posts Section -->
    <section class="py-12 md:py-16 bg-skill-wanderer-darkest"> {/* Changed to darkest background to differentiate from featured section */}
        <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <!-- Search and Filter Section -->
            <div class="mb-8 bg-skill-wanderer-card-dark rounded-lg p-6 border border-dark">
                <div class="flex flex-col md:flex-row gap-4 items-center">
                    <!-- Search Input -->
                    <div class="flex-grow w-full md:w-auto">
                        <input 
                            type="text" 
                            id="searchInput" 
                            placeholder="Search posts by title or description..." 
                            class="w-full px-4 py-3 rounded-lg bg-skill-wanderer-secondary-dark text-skill-wanderer-text-dark border border-dark focus:border-skill-wanderer-primary-orange focus:outline-none transition-colors"
                        />
                    </div>
                      <!-- Category Filter -->
                    <div class="flex flex-wrap gap-2">
                        <button 
                            class="category-filter active px-4 py-2 rounded-lg bg-skill-wanderer-primary-orange text-white font-medium transition-colors" 
                            data-category="all"
                        >
                            All
                        </button>                        {BLOG_CATEGORIES.map(category => (
                            <button 
                                class="category-filter px-4 py-2 rounded-lg bg-skill-wanderer-secondary-dark text-skill-wanderer-text-dark-secondary hover:bg-skill-wanderer-primary-orange hover:text-white font-medium transition-colors" 
                                data-category={category}
                            >
                                {getCategoryDisplayName(category)}
                            </button>
                        ))}
                    </div>
                </div>
            </div>            
            <div class="flex justify-between items-center mb-8">
                <h2 class="text-3xl font-semibold text-skill-wanderer-text-dark">Latest Posts</h2> {/* Text color for dark background */}
                <a href="/blog" class="bg-skill-wanderer-primary-orange text-white px-6 py-3 rounded-lg font-bold hover:bg-skill-wanderer-light-orange hover:text-skill-wanderer-text-dark transition-all duration-300 shadow-lg border border-skill-wanderer-primary-orange">View All Posts</a>
            </div>
            {latestPosts.length > 0 ? (
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="postsContainer">
                    {latestPosts.map(post => (
                        <a href={`/blog/${post.slug}/`} 
                           class="post-card block card-dark rounded-lg overflow-hidden group hover:shadow-xl transition-shadow duration-300 flex flex-col h-full"
                           data-category={post.data.category || ''}
                           data-title={post.data.title.toLowerCase()}
                           data-description={(post.data.description || '').toLowerCase()}>
                            {post.data.image && (
                                <img src={post.data.image} alt={post.data.title} class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300" />
                            )}
                            <div class="p-6 flex-grow flex flex-col">                                <div class="flex justify-between items-center mb-3 text-xs">
                                    {post.data.category && <span class="text-skill-wanderer-primary-orange uppercase font-bold tracking-wider">{getCategoryDisplayName(post.data.category)}</span>}
                                    <span class="text-skill-wanderer-text-dark-muted">
                                        {new Date(post.data.publishDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}
                                    </span>
                                </div>
                                <h3 class="text-xl lg:text-2xl font-bold mb-3 text-skill-wanderer-text-dark group-hover:text-skill-wanderer-primary-orange transition-colors duration-300 flex-grow">{post.data.title}</h3>
                                {post.data.description && <p class="text-sm text-skill-wanderer-text-dark-secondary mb-4 line-clamp-3 flex-grow">{post.data.description}</p>}
                                <div class="mt-auto pt-2">
                                    <span class="text-skill-wanderer-primary-orange group-hover:underline font-semibold text-sm">Read more →</span>
                                </div>
                            </div>
                        </a>
                    ))}
                </div>
            ) : (
                <p class="text-skill-wanderer-text-dark-secondary mt-8 text-center">No latest posts available at the moment.</p>
            )}
        </div>
    </section>

    <!-- Join the Journey Section -->
    <!-- <section class="py-16 md:py-24 bg-skill-wanderer-primary-dark">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <h2 class="text-3xl md:text-4xl font-semibold mb-6 text-skill-wanderer-text-dark">Join the Journey</h2>
            <p class="text-lg mb-8 max-w-xl mx-auto text-skill-wanderer-text-dark-secondary">
                Get weekly insights on development, architecture, and the art of continuous learning.
            </p>
            <form class="max-w-md mx-auto flex gap-3">
                <input type="email" placeholder="Enter your email" 
                       class="flex-grow rounded-lg py-3 px-4 outline-none transition-colors bg-skill-wanderer-secondary-dark text-skill-wanderer-text-dark border border-dark focus:border-skill-wanderer-primary-orange" />
                <button type="submit" class="btn-primary">Subscribe</button>
            </form>
        </div>    </section> -->

    <!-- Footer -->
    <Footer />
    
<script>
        // Filter functionality
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput') as HTMLInputElement;
            const categoryFilters = document.querySelectorAll('.category-filter');
            const postCards = document.querySelectorAll('.post-card') as NodeListOf<HTMLElement>;
            const postsContainer = document.getElementById('postsContainer');

            let currentCategory = 'all';
            let currentSearchTerm = '';

            // Search functionality
            if (searchInput) {
                searchInput.addEventListener('input', function(e) {
                    const target = e.target as HTMLInputElement;
                    if (target) {
                        currentSearchTerm = target.value.toLowerCase();
                        filterPosts();
                    }
                });
            }            // Category filter functionality
            categoryFilters.forEach(button => {
                button.addEventListener('click', function(this: HTMLElement) {
                    // Remove active class from all buttons
                    categoryFilters.forEach(btn => {
                        btn.classList.remove('active', 'bg-skill-wanderer-primary-orange', 'text-white');
                        btn.classList.add('bg-skill-wanderer-secondary-dark', 'text-skill-wanderer-text-dark-secondary');
                    });

                    // Add active class to clicked button
                    this.classList.add('active', 'bg-skill-wanderer-primary-orange', 'text-white');
                    this.classList.remove('bg-skill-wanderer-secondary-dark', 'text-skill-wanderer-text-dark-secondary');

                    currentCategory = this.dataset.category || 'all';
                    filterPosts();
                });
            });

            function filterPosts() {
                let visiblePosts = 0;

                postCards.forEach(card => {
                    const cardCategory = card.dataset.category || '';
                    const cardTitle = card.dataset.title || '';
                    const cardDescription = card.dataset.description || '';

                    const matchesCategory = currentCategory === 'all' || cardCategory === currentCategory;
                    const matchesSearch = currentSearchTerm === '' || 
                                        cardTitle.includes(currentSearchTerm) || 
                                        cardDescription.includes(currentSearchTerm);

                    if (matchesCategory && matchesSearch) {
                        card.style.display = 'block';
                        visiblePosts++;
                    } else {
                        card.style.display = 'none';
                    }
                });

                // Show no results message if no posts are visible
                let noResultsMsg = document.getElementById('noResultsMessage');
                if (visiblePosts === 0) {
                    if (!noResultsMsg && postsContainer) {
                        noResultsMsg = document.createElement('div');
                        noResultsMsg.id = 'noResultsMessage';
                        noResultsMsg.className = 'col-span-full text-center py-12';
                        noResultsMsg.innerHTML = `
                            <div class="text-skill-wanderer-text-dark-secondary">
                                <h3 class="text-xl font-semibold mb-2">No posts found</h3>
                                <p>Try adjusting your search terms or filters.</p>
                            </div>
                        `;
                        postsContainer.appendChild(noResultsMsg);
                    }
                    if (noResultsMsg) {
                        noResultsMsg.style.display = 'block';
                    }
                } else if (noResultsMsg) {
                    noResultsMsg.style.display = 'none';
                }
            }
        });
    </script>

</body>
</html>
