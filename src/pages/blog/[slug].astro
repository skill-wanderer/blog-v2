---
import BlogLayout from '../../layouts/BlogLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post: CollectionEntry<'posts'>) => ({
    params: { slug: post.slug },
    props: { entry: post },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

// Placeholder for related posts. You might want to implement a more dynamic way to fetch these.
const relatedPosts = [
  {
    title: 'Mastering TypeScript: Advanced Patterns for Scalable Applications',
    excerpt: 'Dive deep into advanced TypeScript patterns that will help you build more maintainable and scalable applications.',
    slug: 'mastering-typescript-advanced-patterns',
    category: 'Development',
    readTime: '8 min',
    image: '/blog/typescript-patterns.jpg'
  },
  {
    title: 'Database Design Patterns for Scale',
    excerpt: 'Learn how to design databases that can handle millions of users while maintaining performance.',
    slug: 'database-design-patterns',
    category: 'Architecture',
    readTime: '10 min',
    image: '/blog/database-design.jpg'
  }
];
---

<BlogLayout
  post={entry.data}
  headings={headings}
  relatedPosts={relatedPosts}
  currentSlug={entry.slug}
>
  <Content />
</BlogLayout>
