---
import BlogLayout from '../../layouts/BlogLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post: CollectionEntry<'posts'>) => ({
    params: { slug: post.slug },
    props: { entry: post },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

// Fetch all posts
const allPosts = await getCollection('posts');

// Filter posts by same category and exclude current post
const relatedPostsData = allPosts.filter(post => 
  post.data.category === entry.data.category && post.slug !== entry.slug
);

// Map filtered posts to the RelatedPost structure
const relatedPosts = relatedPostsData.map(post => ({
  title: post.data.title,
  excerpt: post.data.description, // Using description as excerpt
  slug: post.slug,
  category: post.data.category,
  readTime: post.data.readTime,
  image: post.data.image,
}));
---

<BlogLayout
  post={entry.data}
  headings={headings}
  relatedPosts={relatedPosts}
  currentSlug={entry.slug}
>
  <Content />
</BlogLayout>
