---
interface Props {
  article: {
    title: string;
    description: string;
    url: string;
    image: string;
    author: string;
    publishDate: string;
    modifiedDate?: string;
    category: string;
    tags?: string[];
    wordCount?: number;
    readTime?: string;
  };
}

const { article } = Astro.props;

const schema = {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": article.title,
  "description": article.description,
  "url": article.url,
  "image": {
    "@type": "ImageObject",
    "url": article.image,
    "width": 1200,
    "height": 630
  },
  "author": {
    "@type": "Person",
    "name": article.author
  },
  "publisher": {
    "@type": "Organization",
    "name": "Skill-Wanderer",
    "logo": {
      "@type": "ImageObject",
      "url": "https://wanderings.skill-wanderer.com/favicon.svg",
      "width": 60,
      "height": 60
    }
  },
  "datePublished": article.publishDate,
  "dateModified": article.modifiedDate || article.publishDate,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": article.url
  },
  "inLanguage": "en-US",
  "articleSection": article.category,
  ...(article.tags && { "keywords": article.tags.join(", ") }),
  ...(article.wordCount && { "wordCount": article.wordCount }),
  ...(article.readTime && {
    "timeRequired": article.readTime.includes('min') 
      ? `PT${article.readTime.match(/\d+/)?.[0]}M` 
      : "PT5M"
  })
};
---

<script type="application/ld+json" set:html={JSON.stringify(schema)} />
