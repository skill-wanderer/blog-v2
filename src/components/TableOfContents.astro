---
export interface TOCItem {
  id: string;
  text: string;
  level: number;
}

interface Props {
  headings: TOCItem[];
}

const { headings } = Astro.props;
---

<aside class="sticky top-8 bg-skill-wanderer-toc-bg rounded-lg p-6 shadow-lg border border-light max-h-[calc(100vh-4rem)] overflow-hidden flex flex-col">
  <div class="mb-4 flex-shrink-0">
    <h3 class="text-lg font-semibold text-skill-wanderer-article-headings mb-3">Table of Contents</h3>
    <!-- Reading Progress Bar -->
    <div class="w-full bg-gray-200 rounded-full h-1 mb-4">
      <div id="reading-progress" class="bg-skill-wanderer-primary-orange h-1 rounded-full transition-all duration-300" style="width: 0%"></div>
    </div>
  </div>
  
  <nav class="space-y-2 overflow-y-auto flex-1 pr-2 -mr-2">
    {headings.map((heading) => (
      <a 
        href={`#${heading.id}`}
        class={`block py-1 px-3 text-sm transition-colors hover:text-skill-wanderer-primary-orange toc-link ${
          heading.level === 2 ? 'font-medium' : 
          heading.level === 3 ? 'ml-4 text-skill-wanderer-article-text' : 
          'ml-8 text-skill-wanderer-article-text text-xs'
        }`}
        data-target={heading.id}
      >
        {heading.text}
      </a>
    ))}
  </nav>
</aside>

<script>
  // Reading progress
  function updateReadingProgress() {
    const article = document.querySelector('article');
    if (!article) return;
    
    const scrollTop = window.scrollY;
    const docHeight = article.offsetHeight;
    const winHeight = window.innerHeight;
    const scrollPercent = scrollTop / (docHeight - winHeight);
    const scrollPercentRounded = Math.round(scrollPercent * 100);
    
    const progressBar = document.getElementById('reading-progress');
    if (progressBar) {
      progressBar.style.width = Math.min(100, Math.max(0, scrollPercentRounded)) + '%';
    }
  }

  // Active TOC highlighting
  function updateActiveTOC() {
    const headings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
    const tocLinks = document.querySelectorAll('.toc-link');
    
    let activeHeading = null;
    
    headings.forEach((heading) => {
      const rect = heading.getBoundingClientRect();
      if (rect.top <= 100) {
        activeHeading = heading;
      }
    });
    
    tocLinks.forEach((link) => {
      link.classList.remove('border-l-4', 'border-skill-wanderer-primary-orange', 'bg-white', 'text-skill-wanderer-primary-orange');
      link.classList.add('text-skill-wanderer-article-text');
    });
    
    if (activeHeading) {
      const activeLink = document.querySelector(`.toc-link[data-target="${activeHeading.id}"]`);
      if (activeLink) {
        activeLink.classList.add('border-l-4', 'border-skill-wanderer-primary-orange', 'bg-white', 'text-skill-wanderer-primary-orange');
        activeLink.classList.remove('text-skill-wanderer-article-text');
        
        // Auto-scroll the active link into view within the TOC
        const tocNav = activeLink.closest('nav');
        if (tocNav) {
          const linkRect = activeLink.getBoundingClientRect();
          const navRect = tocNav.getBoundingClientRect();
          
          if (linkRect.bottom > navRect.bottom || linkRect.top < navRect.top) {
            activeLink.scrollIntoView({ 
              behavior: 'smooth', 
              block: 'center',
              inline: 'nearest'
            });
          }
        }
      }
    }
  }

  // Scroll event listeners
  window.addEventListener('scroll', () => {
    updateReadingProgress();
    updateActiveTOC();
  });
  
  // Initialize on load
  document.addEventListener('DOMContentLoaded', () => {
    updateReadingProgress();
    updateActiveTOC();
  });
</script>

<style>
  /* Custom scrollbar for the TOC navigation */
  nav {
    scrollbar-width: thin;
    scrollbar-color: #cbd5e0 transparent;
  }
  
  nav::-webkit-scrollbar {
    width: 6px;
  }
  
  nav::-webkit-scrollbar-track {
    background: transparent;
  }
  
  nav::-webkit-scrollbar-thumb {
    background-color: #cbd5e0;
    border-radius: 3px;
    transition: background-color 0.2s ease;
  }
  
  nav::-webkit-scrollbar-thumb:hover {
    background-color: #a0aec0;
  }
  
  /* Smooth scroll behavior for TOC links */
  html {
    scroll-behavior: smooth;
  }
</style>
