# Firebase Configuration Environment Variables
# Copy this file to .env.local and fill in your Firebase project configuration
# These environment variables will be used in development

# Firebase Project Configuration (PUBLIC_ prefix makes them available on client-side)
PUBLIC_FIREBASE_API_KEY=your-firebase-api-key-here
PUBLIC_FIREBASE_AUTH_DOMAIN=your-project-id.firebaseapp.com
PUBLIC_FIREBASE_PROJECT_ID=your-project-id
PUBLIC_FIREBASE_STORAGE_BUCKET=your-project-id.appspot.com
PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your-messaging-sender-id
PUBLIC_FIREBASE_APP_ID=your-app-id

# Development Notes:
# - Get these values from your Firebase project console
# - API Key: Project Settings > General > Web API Key
# - Project ID: Project Settings > General > Project ID
# - Storage Bucket: Project Settings > General > Storage bucket
# - Messaging Sender ID: Project Settings > Cloud Messaging > Sender ID
# - App ID: Project Settings > General > Your apps > Web app > App ID

# IMPORTANT: The PUBLIC_ prefix is required for Astro to make these variables
# available on the client-side where Firebase needs them.
# Analytics has been disabled, so no measurement ID is needed.

# Environment Setup:
# 1. For local development: Copy this file to .env.local and fill in your values
# 2. For production: Set these as environment variables in your deployment platform
#    - Use the variable names without the "your-" prefix
#    - Example: FIREBASE_API_KEY=actual-api-key-value
# 3. The .env.production file will map these to PUBLIC_ prefixed variables
